name: '规划'
description: '规划编译流程'
outputs:
  matrix:
    description: "matrix参数"
    value: ${{ steps.config-generator.outputs.matrix }}
runs: 
  using: "composite"
  steps:
        - run: |
            config=$(grep "^config=" $GITHUB_WORKSPACE/config/OpenWrt.config|sed "s/.*=//g")
            if [ -z $config ] ; then
              echo "::error ::选择的配置为空"
              exit 1
            elif [ "$(echo "$config"|grep -c "[!@#$%^&:*=+\`~\'\"\(\)/ ]")" -ne '0' ] ; then
              echo "::error ::选择的配置中有非法字符"
              exit 1
            else
              for i in $(echo $config|sed "s/,/ /g"); do
                if ! [ -d "$GITHUB_WORKSPACE/config/$i" ]; then
                  echo "::error ::配置$i不存在"
                  exit 1
                fi
              done
            fi
            echo config=$config >> "$GITHUB_ENV"
          shell: bash
        - run: |         
            TMPFILE=$(mktemp)
            export parameter=matrix={\'include\':[
            for i in $(echo $config|sed "s/,/ /g"); do
              #配置完整性检测
              if [ ! -e "$GITHUB_WORKSPACE/config/$i/OpenWrt-K/compile.config" ]; then
                echo "::error ::$i配置中缺少openwrt编译配置文件(OpenWrt-K/compile.config),请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              elif [ -z "$(sed -n '/openwrt_tag\/branch/p' $GITHUB_WORKSPACE/config/$i/OpenWrt-K/compile.config | sed -e 's/.*=//')" ]; then
                echo "::error ::无法获取$i配置中编译的openwrt分支或版本,请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              fi
              if [ ! -e "$GITHUB_WORKSPACE/config/$i/OpenWrt-K/openwrtext.config" ]; then
                echo "::error ::$i配置中缺少openwrt拓展配置文件(OpenWrt-K/openwrtext.config),请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              elif [ "$(grep -c "^ipaddr=" $GITHUB_WORKSPACE/config/$i/OpenWrt-K/openwrtext.config)" -eq 0 ];then
                echo "::error ::无法获取$i配置中openwrt的默认IP(在OpenWrt-K/openwrtext.config中),请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              elif [ "$(grep -c "^timezone=" $GITHUB_WORKSPACE/config/$i/OpenWrt-K/openwrtext.config)" -eq 0 ];then
                echo "::error ::无法获取$i配置中openwrt的时区(在OpenWrt-K/openwrtext.config中),请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              elif [ "$(grep -c "^zonename=" $GITHUB_WORKSPACE/config/$i/OpenWrt-K/openwrtext.config)" -eq 0 ];then
                echo "::error ::无法获取$i配置中openwrt的时区区域名称(在OpenWrt-K/openwrtext.config中),请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              fi
              if [ -z "$(sed -n '/^kmod_compile_exclude_list=/p' $GITHUB_WORKSPACE/config/$i/OpenWrt-K/compile.config | sed -e "s/=[my]\([,]\{0,1\}\)/\1/g" -e 's/.*=//')" ];then
                echo "::warning ::无法获取$i配置中的kmod编译排除列表，这很有可能导致编译失败。"
              fi
              # 检查拓展软件包配置文件
              if [ ! -e "$GITHUB_WORKSPACE/config/$i/OpenWrt-K/extpackages.config" ]; then
                echo "::error ::$i配置中缺少拓展软件包配置文件(OpenWrt-K/extpackages.config)即使为空也应该存在,请尝试使用新版OpenWrt-k配置构建工具"
                exit 1
              else
                EXT_PKGS_CONFIG=$GITHUB_WORKSPACE/config/$i/OpenWrt-K/extpackages.config
                NUMBER_OF_PKGS1=$(grep -c "^EXT_PACKAGES_NAME\[" $EXT_PKGS_CONFIG)
                NUMBER_OF_PKGS2=$(sed -n -e "/^EXT_PACKAGES_NAME\[/p" $EXT_PKGS_CONFIG|sed -n '$p'|sed 's/EXT_PACKAGES_NAME\[\([0-9]*\).*/\1/')
                if [ -z "$NUMBER_OF_PKGS1" ]; then
                  echo "::warning ::$i配置中的拓展软件包配置文件中没有任何拓展软件包配置。"
                elif [ "$NUMBER_OF_PKGS1" -ne "$NUMBER_OF_PKGS2" ]; then
                  echo "::error ::$i配置中拓展软件包配置文件(OpenWrt-K/extpackages.config)有错误"
                  n=1
                  # 找出缺少的拓展软件包配置
                  while [ "$n" -le $NUMBER_OF_PKGS2 ]; do
                    if [ $(grep -c "^EXT_PACKAGES_NAME\[$n\]" $EXT_PKGS_CONFIG) -eq 0 ]; then
                      echo "::error ::$i配置中拓展软件包配置序号为$n的配置不存在"
                    fi
                     n=$(( n+1 ))
                  done
                fi
              fi
              git clone https://git.openwrt.org/openwrt/openwrt.git $GITHUB_WORKSPACE/openwrt
              cd $GITHUB_WORKSPACE/openwrt
              export OPENWRT_TAG_BRANCH="$(sed -n '/openwrt_tag\/branch/p' $GITHUB_WORKSPACE/config/$i/OpenWrt-K/compile.config | sed -e 's/.*=//')"
              git checkout $OPENWRT_TAG_BRANCH
              cat $GITHUB_WORKSPACE/config/$i/target.config >> $GITHUB_WORKSPACE/openwrt/.config
              make defconfig
              target=$(sed -n '/^CONFIG_TARGET_BOARD/p' $GITHUB_WORKSPACE/openwrt/.config | sed -e 's/CONFIG_TARGET_BOARD\=\"//' -e 's/\"//')
              subtarget=$(sed -n '/^CONFIG_TARGET_SUBTARGET/p' $GITHUB_WORKSPACE/openwrt/.config | sed -e 's/CONFIG_TARGET_SUBTARGET\=\"//' -e 's/\"//')
              targetarchpackages=$(sed -n '/^CONFIG_TARGET_ARCH_PACKAGES/p' $GITHUB_WORKSPACE/openwrt/.config | sed -e 's/CONFIG_TARGET_ARCH_PACKAGES\=\"//' -e 's/\"//')
              export parameter=$parameter\{\'config\':\'$i\',\'target\':\'$target\',\'subtarget\':\'$subtarget\',\'targetarchpackages\':\'$targetarchpackages\'\},
              echo "::notice ::配置$i的Release名:OpenWrt-$starttime-$target-$subtarget_$OPENWRT_TAG_BRANCH"
              echo "::notice ::配置$i编译的架构为$target,子架构为$subtarget,软件包目标架构为:$targetarchpackages"
              echo "::notice ::配置$i编译的标签/分支为$OPENWRT_TAG_BRANCH"
              echo "$starttime_$target-$subtarget_$OPENWRT_TAG_BRANCH" >> $TMPFILE
              rm -rf $GITHUB_WORKSPACE/openwrt
              cd $GITHUB_WORKSPACE
            done
            export parameter=$parameter]}
            export parameter=$(echo $parameter|sed "s/},]/}]/g")
            if sort $TMPFILE | uniq -d | grep -q . ; then
              echo "::error ::配置会生成重名的Release"
              exit 1
            fi
            echo parameter=$parameter >> "$GITHUB_ENV"
          shell: bash
        - id: config-generator
          run: |
            echo "$parameter" >> $GITHUB_OUTPUT
            echo "$parameter"
          shell: bash
